const s=(t,o)=>{const e=t.charCodeAt(o);return e>=65&&e<=90},d=t=>t[0].toUpperCase()+t.slice(1),u=new Set(["workflowType"]),r={workflowExecutionWorkflowId:"workflowId",workflowExecutionRunId:"runId",protocolInstanceId:"updateId",metaUpdateId:"updateId"},i=t=>t?u.has(t)?`${t}Name`:r[t]?r[t]:t:"",f=t=>{if(!t)return"";let o="",e=0;for(t=i(t);e<t.length;){const n=t[e],c=t[e+1];if(e===0){o+=t[e].toUpperCase(),e++;continue}if(n+c==="Id"){o+=" ID",e+=2;continue}if(s(t,e)){o+=" ",o+=n.toUpperCase(),e++;continue}o+=n,e++}return o};export{d as c,f};
