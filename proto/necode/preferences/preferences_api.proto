syntax = "proto3";

package necode.preferences;

import "necode/preferences/resources.proto";
import "necode/rpc/status.proto";

// Preferences API.
//
// The Preferences API is responsible for creating
// a key-value map according to user preferences.
//
// The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
// NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
// "OPTIONAL" in this document are to be interpreted as described in
// RFC 2119.
//
// The following are global requirements that apply to all methods:
// Any method MUST return CODE_OK on a succesful operation.
// Any method MAY return NOT_IMPLEMENTED.
// Any method MAY return INTERNAL.
// Any method MAY return UNKNOWN.
// Any method MAY return UNAUTHENTICATED.
service PreferencesAPI {
  // Maps the key-value pair.
  rpc SetKey(SetKeyRequest) returns (SetKeyResponse);
  // Returns the value associated with the
  // requested key.
  rpc GetKey(GetKeyRequest) returns (GetKeyResponse);
}

message SetKeyRequest {
  // REQUIRED.
  PreferenceKey key = 1;
  // REQUIRED.
  // The value associated with the key.
  string val = 2;
}

message SetKeyResponse {
  // REQUIRED.
  // The response status.
  necode.rpc.Status status = 1;
}

message GetKeyRequest {
  // REQUIRED.
  PreferenceKey key = 1;
}

message GetKeyResponse {
  // REQUIRED.
  // The response status.
  necode.rpc.Status status = 1;
  // REQUIRED.
  // The value associated with the key.
  string val = 2;
}
