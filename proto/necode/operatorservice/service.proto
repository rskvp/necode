syntax = "proto3";

package necode.operatorservice;

import "necode/operatorservice/request_response.proto";

// OperatorService API defines how Temporal SDKs and other clients interact with the Temporal server
// to perform administrative functions like registering a search attribute or a namespace.
// APIs in this file could be not compatible with Temporal Cloud, hence it's usage in SDKs should be limited by
// designated APIs that clearly state that they shouldn't be used by the main Application (Workflows & Activities) framework.
service OperatorService {
    // (-- Search Attribute --)

    // AddSearchAttributes add custom search attributes.
    //
    // Returns ALREADY_EXISTS status code if a Search Attribute with any of the specified names already exists
    // Returns INTERNAL status code with necode.errordetails.SystemWorkflowFailure in Error Details if registration process fails,
    rpc AddSearchAttributes (AddSearchAttributesRequest) returns (AddSearchAttributesResponse) {
    }

    // RemoveSearchAttributes removes custom search attributes.
    //
    // Returns NOT_FOUND status code if a Search Attribute with any of the specified names is not registered
    rpc RemoveSearchAttributes (RemoveSearchAttributesRequest) returns (RemoveSearchAttributesResponse) {
    }

    // ListSearchAttributes returns comprehensive information about search attributes.
    rpc ListSearchAttributes (ListSearchAttributesRequest) returns (ListSearchAttributesResponse) {
    }

    // DeleteNamespace synchronously deletes a namespace and asynchronously reclaims all namespace resources.
    // (-- api-linter: core::0135::method-signature=disabled
    //     aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
    // (-- api-linter: core::0135::response-message-name=disabled
    //     aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
    rpc DeleteNamespace (DeleteNamespaceRequest) returns (DeleteNamespaceResponse) {
    }

    // AddOrUpdateRemoteCluster adds or updates remote cluster.
    rpc AddOrUpdateRemoteCluster(AddOrUpdateRemoteClusterRequest) returns (AddOrUpdateRemoteClusterResponse) {
    }

    // RemoveRemoteCluster removes remote cluster.
    rpc RemoveRemoteCluster(RemoveRemoteClusterRequest) returns (RemoveRemoteClusterResponse) {
    }

    // ListClusters returns information about Temporal clusters.
    rpc ListClusters(ListClustersRequest) returns (ListClustersResponse) {
    }
}
